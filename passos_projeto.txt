- criar pasta do projeto
- criar a pasta views dentro da pasta do projeto, que será utilizada com o EJS, onde serão criados os arquivos HTML com extensão .ejs
- Dentro da pasta do projeto, inicializar o npm usando o comando 'npm init'
- Dar o comando 'npm install express --save' dentro da pasta do projeto para realizar a instalação
- Dar o comando 'npm install ejs --save' para instalar o gerenciador de template EJS
- instalar o nodemon para reinicialização do servidor - npm install nodemon -g

- criar o arquivo inicial index.js dentro da pasta express
- importar o Express para dentro do arquivo inicial 'const express = require("express");
- instanciar o express no aplicativo 'const app = express()';
- setar o ejs para rodar no express ex: app.set('view engine', 'ejs');
- rodar o app utilizando : nodemon 'index.js'
- criar pasta 'public' onde serão adicionados os arquivos estáticos utilizados no aplicativo
- configurando o app para o express usar aquivos estaticos ex: app.use(express.static('public');
- dentro da pasta 'public' crie as outras pastas ex: css, img, js
- baixar o bootstrap e inserir as referências nas páginas
- criar os partials do header, navbar e footer para as páginas, inserir os includes nas paginas.
- utilizar o express.urlencoded para capturar os dados enviados pelo formulário. Utilizar os comandos 'app.use(express.urlencoded({extended:false});'
- utilizar o json para utilizar os dados.Utilizar o comando 'app.use(express.json());'

- instalar o Mysql Server comunity
- Utilizar os comandos no prompt para abrir o Mysql - "mysql -h localhost -u root -p"
   . Show Databases; (mostra os bancos de dados)
   . Criar banco de dados ex: CREATE DATABASE sistemaDeCadastro; (criando o banco de dados)
   . Selecionar o banco de dados ex: USE sistemaDeCadastro; (utilizar o banco de dados)
   . Para criar tabelas ex:CREATE TABLE usuarios(nome VARCHAR(50), email VARCHAR(100), idade INT);
   . Descrever a tabela ex: DESCRIBE usuarios;
   . Inserindo dados na tabela ex: INSERT INTO usuarios(nome, email, idade) VALUES('Pedro','Pedro@com',33);
   . Mostrando dados da tabela ex: SELECT * FROM usuarios;
   . ex: select nome from usuarios where idade <= 35 and idade >= 18;
   . Deletando dados da tabela ex: DELETE FROM usuarios WHERE nome = 'Joao';
   . Atualizando dados da tabela ex: UPDATE usuarios SET nome = "Nome de Teste" WHERE nome = 'Maria';

- "utilizando o express.urlencoded para capturar os dados do formulário "



